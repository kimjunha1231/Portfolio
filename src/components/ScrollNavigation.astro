<!-- Hero 하단 네비게이션 --><!-- 스크롤 시 나타나는 고정 네비게이션 -->
<nav class="fixed-nav" id="fixed-nav">
  <div class="container">
    <div class="nav-content">
      <div class="nav-items">
        <a href="#skills" class="nav-link">핵심 역량</a>
        <a href="#tech" class="nav-link">기술 스택</a>
        <a href="#projects" class="nav-link">프로젝트</a>
        <a href="#contact" class="nav-link">연락처</a>
      </div>
    </div>
  </div>
</nav>

<style>
  .fixed-nav {
    position: fixed;
    top: 10px;
    left: 50%;
    transform: translateX(-50%) translateY(-200%);
    background: rgba(43, 67, 124, 0.5);
    backdrop-filter: blur(12px);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 50px;
    padding: 0.5rem 1rem;
    z-index: 1000;

    transition: transform 0.3s ease;
    box-shadow:
      0 12px 40px rgba(0, 0, 0, 0.5),
      0 4px 12px rgba(0, 0, 0, 0.3);
  }

  .fixed-nav.visible {
    transform: translateX(-50%) translateY(0);
  }

  .fixed-nav .nav-content {
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .fixed-nav .nav-items {
    display: flex;
    gap: 0.5rem;
  }

  .fixed-nav .nav-link {
    color: white;
    text-decoration: none;
    font-size: 0.85rem;
    font-weight: 600;
    padding: 0.6rem 1rem;
    border-radius: 25px;
    transition: all 0.3s ease;
    white-space: nowrap;
    position: relative;
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);
    outline: none;
    border: none;
  }

  .fixed-nav .nav-link:hover {
    color: white;
    background: black;
    text-shadow: 0 1px 3px rgba(0, 0, 0, 0.7);
    transform: translateY(-1px);
    outline: none;
    border: none;
  }

  .fixed-nav .nav-link.active {
    color: white;
    background: black;
    font-weight: 700;
    box-shadow:
      0 2px 8px rgba(0, 0, 0, 0.3),
      0 1px 4px rgba(96, 165, 250, 0.3);
    text-shadow: 0 1px 3px rgba(0, 0, 0, 0.7);
    outline: none;
    border: none;
  }

  .fixed-nav .nav-link:focus {
    outline: none;
    border: none;
  }

  /* 모바일 반응형 */
  @media (max-width: 768px) {
    .hero-nav .nav-items {
      flex-direction: column;
      align-items: center;
      gap: 1rem;
    }

    .hero-nav .nav-link {
      font-size: 1rem;
    }

    .fixed-nav {
      padding: 0.4rem 0.8rem;
    }

    .fixed-nav .nav-items {
      gap: 0.3rem;
    }

    .fixed-nav .nav-link {
      font-size: 0.75rem;
      padding: 0.5rem 0.8rem;
    }
  }

  @media (max-width: 480px) {
    .hero-nav .nav-items {
      gap: 0.5rem;
    }

    .hero-nav .nav-link {
      font-size: 0.9rem;
      padding: 0.4rem 0.8rem;
    }

    .fixed-nav {
      padding: 0.3rem 0.6rem;
    }

    .fixed-nav .nav-items {
      gap: 0.2rem;
    }

    .fixed-nav .nav-link {
      font-size: 0.7rem;
      padding: 0.4rem 0.6rem;
    }
  }
</style>

<script>
  // 스크롤 네비게이션 기능
  const heroNav = document.getElementById("hero-nav");
  const fixedNav = document.getElementById("fixed-nav");

  let heroNavBottom = 0;
  let currentSection = "";

  // 섹션들
  const sections = ["skills", "tech", "projects", "contact"];

  function updateNavPosition() {
    if (heroNav) {
      heroNavBottom = heroNav.offsetTop + heroNav.offsetHeight;
    }
  }

  // 현재 활성화된 섹션 업데이트
  function updateActiveSection() {
    const scrollY = window.scrollY;
    const documentHeight = document.documentElement.scrollHeight;
    const windowHeight = window.innerHeight;
    let current = "";

    // 페이지 끝에 도달했을 때는 마지막 섹션(연락처)을 활성화
    if (scrollY + windowHeight >= documentHeight - 50) {
      current = "contact";
    } else {
      sections.forEach((sectionId, index) => {
        const section = document.getElementById(sectionId);
        if (section) {
          const sectionTop = section.offsetTop - 150;
          const sectionBottom = sectionTop + section.offsetHeight;

          // 마지막 섹션의 경우 더 관대한 조건 적용
          if (index === sections.length - 1) {
            if (scrollY >= sectionTop) {
              current = sectionId;
            }
          } else {
            if (scrollY >= sectionTop && scrollY < sectionBottom) {
              current = sectionId;
            }
          }
        }
      });
    }

    if (current !== currentSection) {
      currentSection = current;

      // 모든 nav-link에서 active 클래스 제거
      document.querySelectorAll(".nav-link").forEach((link) => {
        link.classList.remove("active");
      });

      // 현재 섹션에 해당하는 링크에 active 클래스 추가
      if (current) {
        document.querySelectorAll(`a[href="#${current}"]`).forEach((link) => {
          link.classList.add("active");
        });
      }
    }
  }

  function handleScroll() {
    const scrollY = window.scrollY;

    // 뷰포트 높이의 80% 이상 스크롤했을 때 고정 네비게이션 표시
    const viewportHeight = window.innerHeight;
    const heroSection = document.querySelector(".hero") as HTMLElement;
    let showThreshold = viewportHeight * 0.8;

    // HeroSection이 있으면 그 높이의 70% 지점에서 나타나도록 조정
    if (heroSection) {
      const heroHeight = heroSection.offsetHeight;
      showThreshold = heroHeight * 1.0;
    }

    if (scrollY >= showThreshold) {
      fixedNav?.classList.add("visible");
    } else {
      fixedNav?.classList.remove("visible");
    }

    updateActiveSection();
  }

  // 초기 위치 설정
  updateNavPosition();
  updateActiveSection();

  // 스크롤 이벤트 리스너
  window.addEventListener("scroll", handleScroll);

  // 리사이즈 시 위치 업데이트
  window.addEventListener("resize", () => {
    updateNavPosition();
    handleScroll();
  });

  // 네비게이션 클릭 시 부드러운 스크롤
  document.querySelectorAll(".nav-link").forEach((link) => {
    link.addEventListener("click", (e) => {
      e.preventDefault();
      const href = link.getAttribute("href");
      if (href && href.startsWith("#")) {
        const target = document.querySelector(href);
        if (target && target instanceof HTMLElement) {
          const offsetTop = target.offsetTop - 100; // 고정 네비게이션 높이 고려
          window.scrollTo({
            top: offsetTop,
            behavior: "smooth",
          });
        }
      }
    });
  });
</script>
